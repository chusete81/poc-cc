input {
    beats {
        port => 5044
    }
}

filter {
    grok {
        match => {
            "message" => "%{TIMESTAMP_ISO8601:log.raw.date} [ ]*%{NOTSPACE:log.level} %{NOTSPACE:log.pid} --- %{NOTSPACE:log.threadID} %{NOTSPACE:log.class}[ ]*:[ ]*%{NOTSPACE:log.eventCode}-%{NOTSPACE:log.description}( %{NOTSPACE:log.aux1})?( %{NOTSPACE:log.aux2})?( %{NOTSPACE:log.aux3})?"
        }
    }

    if "_grokparsefailure" not in [tags] {
        date {
            match => [ "log.raw.date", "ISO8601" ]
            timezone => "CET"
            target => "log.date"
        }

        mutate { add_field => { "log.eventFull" => "%{log.eventCode}-%{log.description}" } }

        if !([log.aux1]) { mutate { add_field => { "log.aux1" => "" } } }
        if !([log.aux2]) { mutate { add_field => { "log.aux2" => "" } } }
        if !([log.aux3]) { mutate { add_field => { "log.aux3" => "" } } }

        # tratamiento especifico de los campos adicionales
        if [log.eventCode] == "C11" {
            mutate { add_field => { "log.uuid"        => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID"   => "%{log.aux2}" } }
            mutate { add_field => { "log.elapsedTime" => "%{log.aux3}" } }
            mutate { convert   => { "log.elapsedTime" => "integer"     } }
        }
    
        else if [log.eventCode] == "C12" {
            mutate { add_field => { "log.uuid"      => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID" => "%{log.aux2}" } }
        }
    
        else if [log.eventCode] == "C19" {
            mutate { add_field => { "log.uuid"      => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID" => "%{log.aux2}" } }
        }
    
        else if [log.eventCode] == "C21" {
            mutate { add_field => { "log.uuid"      => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID" => "%{log.aux2}" } }
        }
    
        else if [log.eventCode] == "C22" {
            mutate { add_field => { "log.uuid"         => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID"    => "%{log.aux2}" } }
            mutate { add_field => { "log.responseTime" => "%{log.aux3}" } }
            mutate { convert   => { "log.responseTime" => "integer"     } }
        }
    
        else if [log.eventCode] == "C28" {
            mutate { add_field => { "log.uuid"      => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID" => "%{log.aux2}" } }
        }
    
        else if [log.eventCode] == "C29" {
            mutate { add_field => { "log.uuid"      => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID" => "%{log.aux2}" } }
        }

        else if [log.eventCode] == "B12" {
            mutate { add_field => { "log.responseTime" => "%{log.aux1}" } }
            mutate { convert   => { "log.responseTime" => "integer"     } }
        }    
        
        else if [log.eventCode] == "H10" {
            mutate { add_field => { "log.uuid" => "%{log.aux1}" } }
        }

        else if [log.eventCode] == "H11" {
            mutate { add_field => { "log.uuid"        => "%{log.aux1}" } }
            mutate { add_field => { "log.elapsedTime" => "%{log.aux2}" } }
            mutate { convert   => { "log.elapsedTime" => "integer"     } }
        }
		
        else if [log.eventCode] == "H21" {
            mutate { add_field => { "log.uuid"      => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID" => "%{log.aux2}" } }
        }
    
        else if [log.eventCode] == "H22" {
            mutate { add_field => { "log.uuid"      => "%{log.aux1}" } }
            mutate { add_field => { "log.backendID" => "%{log.aux2}" } }
        }
    
        mutate {
            remove_field => [ 
				"host", "prospector", "beat", "input", "offset", "source", 
				"log.raw.date", "log.level", "log.class", 
				"log.aux1", "log.aux2", "log.aux3", 
				"message", "tags", "log.pid", "log.threadID" ]
        }
        
    } else {
        #mutate {
        #    remove_field => [ "" ]
        #}

        #drop{}
    }

}

output {
#    stdout {
#        codec => rubydebug
#        #codec => json
#        #codec => dots
#    }  
#    file {
#        path => "/home/poc/elk/logstash/logs/logstash-output.log"
#        codec => line
#    }
    elasticsearch {
        hosts => [ "localhost:9200" ]
        index => "poc_cc-%{+YYYY.MM.dd}"
    }
}
